var = @{ 
    ASCII_ALPHA ~ (ASCII_ALPHA | ASCII_DIGIT)* 
  | (SYMBOL | LETTER) ~ ASCII_DIGIT* 
}

number = @{ ASCII_DIGIT+ }

binop = _{ add | sub | mul | div }
  add = { "+" }
  sub = { "-" }
  mul = { "*" }
  div = { "/" }

predop = _{ eq | neq | leq | le } 
  eq  = { "=" }
  neq = { "≠" }
  leq = { "≤" }
  le  = { "<" }
 
dvar = { var }
rat = { number }
pred = {  "[" ~ dist ~ predop ~ dist ~ "]"  }
func = { "λ" ~ var ~ "." ~ dist }
distr = { "Λ" ~ var ~ "." ~ dist }
lebesgue = { "λ" ~ "⟦" ~ var ~ "⟧" }
tuple = { "(" ~ (dist ~ ("," ~ dist)+)? ~ ")" }
paren = _{ "(" ~ dist ~ ")" }

dist = { dist2 ~ (binop ~ dist2)* }
dist2 = _{ dist3 ~ (dot ~ (var | number))* }
  dot = { "." }
dist3 = _{ rat | pred | func | distr | lebesgue | tuple | dvar | paren }

dist_full = _{ SOI ~ dist ~ EOI }

WHITESPACE = _{ " " | "\t" }